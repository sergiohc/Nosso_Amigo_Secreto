{"input":{"ourVersion":"1.21.1","commit":"79b44aa704ce542d8ca4a3cc44cfca566e7720f1","locale":"en-us","devMode":false,"absoluteFolderPath":"/home/elementaryos/.vscode/extensions","isBuiltin":false,"tanslations":{},"mtime":1521744711740},"result":[{"name":"bracket-pair-colorizer","displayName":"Bracket Pair Colorizer","description":"A customizable extension for colorizing matching brackets","version":"1.0.26","publisher":"CoenraadS","engines":{"vscode":"^1.21.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"keywords":["bracket","brackets","multi-root ready"],"galleryBanner":{"color":"#1E1E1E","theme":"dark"},"main":"/home/elementaryos/.vscode/extensions/CoenraadS.bracket-pair-colorizer-1.0.26/out/src/extension","contributes":{"configuration":{"type":"object","title":"BracketPair","properties":{"bracketPairColorizer.timeOut":{"type":"number","default":200,"description":"How long the user should idle for, before the document is colorized. Set to 0 to disable","scope":"resource"},"bracketPairColorizer.forceUniqueOpeningColor":{"type":"boolean","default":false,"description":"Ensure that an opening brackets color does not match a previous brackets color","scope":"resource"},"bracketPairColorizer.forceIterationColorCycle":{"type":"boolean","default":false,"description":"Should opening brackets iterate the color cycle even if they are not nested","scope":"resource"},"bracketPairColorizer.colorMode":{"type":"string","enum":["Consecutive","Independent"],"default":"Consecutive","description":"Should different brackets share a color group (Consecutive), or use their own color group (Independent)","scope":"resource"},"bracketPairColorizer.highlightActiveScope":{"type":"boolean","default":false,"description":"Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.","scope":"resource"},"bracketPairColorizer.activeScopeCSS":{"type":"array","default":["borderStyle : solid","borderWidth : 1px","borderColor : {color}; opacity: 0.5"],"description":"CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used","scope":"resource"},"bracketPairColorizer.consecutivePairColors":{"type":"array","default":["()","[]","{}",["Gold","Orchid","LightSkyBlue"],"Red"],"description":"Define paired characters and their shared color group","scope":"resource"},"bracketPairColorizer.independentPairColors":{"type":["array"],"items":{"type":["array"]},"default":[["()",["Gold","Orchid","LightSkyBlue"],"Red"],["[]",["Gold","Orchid","LightSkyBlue"],"Red"],["{}",["Gold","Orchid","LightSkyBlue"],"Red"]],"description":"Define paired characters and their color groups","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","@types/prismjs":"^1.9.0","mocha":"^2.3.3","tslint":"^4.5.1","typescript":"^2.2.1","vscode":"^1.0.5"},"repository":{"type":"git","url":"https://github.com/CoenraadS/BracketPair"},"license":"SEE LICENSE IN LICENSE.md","dependencies":{"prismjs":"^1.13.0"},"uuid":"f583eafd-aa0d-4ccb-8f44-d1e610389660","isBuiltin":false,"id":"CoenraadS.bracket-pair-colorizer","extensionFolderPath":"/home/elementaryos/.vscode/extensions/CoenraadS.bracket-pair-colorizer-1.0.26"},{"name":"minify","displayName":"minify","description":"Minify for VS Code.\nMinify with command, and (optionally) re-minify on save.","version":"0.3.0","publisher":"HookyQR","engines":{"vscode":"^1.6.0"},"categories":["Other"],"activationEvents":["*"],"icon":"icon.svg","galleryBanner":{"color":"#e8e030","theme":"light"},"main":"/home/elementaryos/.vscode/extensions/HookyQR.minify-0.3.0/extension","contributes":{"commands":[{"command":"HookyQR.minify","title":"Minify"},{"command":"HookyQR.minifyDir","title":"Minify Directory"}],"configuration":{"type":"object","title":"Minify config","properties":{"minify.minifyExistingOnSave":{"type":"boolean","default":false,"description":"Minify file on save if a related (.min.[ext]) file already exists. Includes directory minification/"},"minify.js":{"type":"object","description":"Settings specific to Javascript minification. Tool tips and completion are provided when editing your settings.","default":{"mangle":true,"compress":{"sequences":true,"properties":true,"dead_code":true,"drop_debugger":true,"unsafe":false,"unsafe_comps":false,"conditionals":true,"comparisons":true,"evaluate":true,"booleans":true,"loops":true,"unused":true,"hoist_funs":true,"keep_fargs":true,"keep_fnames":false,"hoist_vars":false,"if_return":true,"join_vars":true,"collapse_vars":false,"reduce_vars":false,"cascade":true,"side_effects":true,"pure_getters":false,"pure_funcs":null,"negate_iife":false,"drop_console":false,"passes":1,"global_defs":{}},"output":{"ascii_only":false,"inline_script":false,"max_line_len":32000,"bracketize":false,"semicolons":true,"comments":false,"shebang":true,"preamble":null,"quote_style":"best"}},"properties":{"mangle":{"type":"boolean","default":true,"description":"[UglifyJS] mangle non-toplevel function and variable (including argument) names"},"compress":{"type":"object","description":"Compressor settings","properties":{"sequences":{"type":"boolean","default":true,"description":"join consecutive simple statements using the comma operator"},"properties":{"type":"boolean","default":true,"description":"rewrite property access using the dot notation, for example foo['bar'] → foo.bar"},"dead_code":{"type":"boolean","default":true,"description":"remove unreachable code"},"drop_debugger":{"type":"boolean","default":true,"description":"remove `debugger;` statements"},"unsafe":{"type":"boolean","default":false,"description":"apply \"unsafe\" transformations. See http://lisperator.net/uglifyjs/"},"unsafe_comps":{"type":"boolean","default":false,"description":"reverse < and <= to > and >= to allow improved compression."},"conditionals":{"type":"boolean","default":true,"description":"apply optimizations for if-s and conditional expressions"},"comparisons":{"type":"boolean","default":true,"description":"apply certain optimizations to binary nodes, for example: !(a <= b) → a > b (only when unsafe), attempts to negate binary nodes, e.g. a = !b && !c && !d && !e → a=!(b||c||d||e) etc."},"evaluate":{"type":"boolean","default":true,"description":"attempt to evaluate constant expressions"},"booleans":{"type":"boolean","default":true,"description":"various optimizations for boolean context, for example !!a ? b : c → a ? b : c"},"loops":{"type":"boolean","default":true,"description":"optimizations for do, while and for loops when we can statically determine the condition"},"unused":{"type":"boolean","default":true,"description":"drop unreferenced functions and variables"},"hoist_funs":{"type":"boolean","default":true,"description":"hoist function declarations"},"keep_fargs":{"type":"boolean","default":true,"description":"prevents the compressor from discarding unused function arguments. You need this for code which relies on `Function.length`"},"keep_fnames":{"type":"boolean","default":false,"description":"pass true to prevent the compressor from mangling/discarding function names. Useful for code relying on Function.prototype.name."},"hoist_vars":{"type":"boolean","default":false,"description":"hoist var declarations (this is false by default because it seems to increase the size of the output in general)"},"if_return":{"type":"boolean","default":true,"description":"optimizations for if/return and if/continue"},"join_vars":{"type":"boolean","default":true,"description":"join consecutive var statements"},"collapse_vars":{"type":"boolean","default":false,"description":"Collapse single-use var and const definitions when possible."},"reduce_vars":{"type":"boolean","default":false,"description":"improve optimization on variables assigned with and used as constant values."},"cascade":{"type":"boolean","default":true,"description":"small optimization for sequences, transform x, x into x and x = something(), x into x = something()"},"side_effects":{"type":"boolean","default":true,"description":"drop side-effect-free statements"},"pure_getters":{"type":"boolean","default":false,"description":"if you pass true for this, UglifyJS will assume that object property access (e.g. foo.bar or foo[\"bar\"]) doesn't have any side effects"},"pure_funcs":{"type":["array","null"],"default":null,"description":"an array of function names that UglifyJS will assume do not produce side effects."},"negate_iife":{"type":"boolean","default":false,"description":"negate \"Immediately-Called Function Expressions\" where the return value is discarded, to avoid the parens that the code generator would insert."},"drop_console":{"type":"boolean","default":false,"description":"pass true to discard calls to console.* functions."},"passes":{"type":"integer","default":1,"description":"number of times to run compress. Use an integer argument larger than 1 to further reduce code size in some cases. Note: raising the number of passes will increase uglify compress time."},"global_defs":{"type":"object","default":{},"description":"global definitions"}}},"output":{"type":"object","description":"Compressor settings","properties":{"ascii_only":{"type":"boolean","default":false,"description":"escape Unicode characters in strings and regexps (affects directives with non-ascii characters becoming invalid)"},"inline_script":{"type":"boolean","default":false,"description":"escape the slash in occurrences of `</script` in strings"},"max_line_len":{"type":"integer","default":32000,"description":"maximum line length for uglified code"},"bracketize":{"type":"boolean","default":false,"description":"always insert brackets in `if`, `for`, `do`, `while` or `with` statements, even if their body is a single statement."},"semicolons":{"type":"boolean","default":true,"description":"separate statements with semicolons. If set to 'false' then whenever possible a newline will be inserted instead of a semicolon, leading to more readable output of uglified code (size before gzip could be smaller; size after gzip insignificantly larger)."},"comments":{"type":["boolean","string"],"default":false,"description":"Preserve comments:\n  - \"all\" or `true` will keep all comments;\n  - \"some\" will keep multi-line comments containing '@license', '@preserve', or '@cc_on';\n  - A valid JS RegExp (as a string) like '/foo/i' or '/^!/' will keep matching multi-line comments."},"shebang":{"type":"boolean","default":true,"description":"preserve the shebang at the start of the file"},"preamble":{"type":["string","null"],"default":null,"description":"Preamble to prepend to the output. You can use this to insert a comment, for example for licensing information."},"quote_style":{"type":"string","enum":["best","single","double","original"],"default":"best","description":"quite style to use, by default double quotes are used unless the string contains double quotes"}}}}},"minify.css":{"type":"object","description":"Settings specific to CSS minification. Tool tips and completion are provided when editing your settings.","default":{"advanced":true,"aggressiveMerging":true,"compatibility":"*","inliner":{},"keepBreaks":false,"keepSpecialComments":"*","mediaMerging":true,"processImport":true,"processImportFrom":["all"],"rebase":true,"restructuring":true,"root":"${workspaceRoot}","roundingPrecision":2,"semanticMerging":false,"shorthandCompacting":true},"properties":{"advanced":{"type":"boolean","default":true,"description":"set to false to disable advanced optimizations - selector & property merging, reduction, etc."},"aggressiveMerging":{"type":"boolean","default":true,"description":"set to false to disable aggressive merging of properties."},"compatibility":{"type":"string","default":"*","description":"enables compatibility mode, see https://github.com/jakubpawlowicz/clean-css#how-to-set-a-compatibility-mode"},"inliner":{"type":"object","default":{},"description":"a hash of options for @import inliner, see https://github.com/jakubpawlowicz/clean-css/blob/master/test/protocol-imports-test.js#L372 for examples"},"keepBreaks":{"type":"boolean","default":false,"description":"whether to keep line breaks"},"keepSpecialComments":{"type":["string","integer"],"enum":["*",1,0],"default":"*","description":"* for keeping all (default), 1 for keeping first one only, 0 for removing all"},"mediaMerging":{"type":"boolean","default":true,"description":"whether to merge @media at-rules (default is true)"},"processImport":{"type":"boolean","default":true,"description":"whether to process @import rules"},"processImportFrom":{"type":"array","default":["all"],"description":"a list of @import rules, can be ['all'] (default), ['local'], ['remote'], or a blacklisted path e.g. ['!fonts.googleapis.com']"},"rebase":{"type":"boolean","default":true,"description":"set to false to skip URL rebasing"},"restructuring":{"type":"boolean","default":true,"description":"set to false to disable restructuring in advanced optimizations"},"root":{"type":"string","default":"${workspaceRoot}","description":"path to resolve absolute @import rules and rebase relative URLs"},"roundingPrecision":{"type":"integer","default":2,"description":"rounding precision; defaults to 2; -1 disables rounding"},"semanticMerging":{"type":"boolean","default":false,"description":"set to true to enable semantic merging mode which assumes BEM-like content (default is false as it's highly likely this will break your stylesheets - use with caution!)"},"shorthandCompacting":{"type":"boolean","default":true,"description":"set to false to skip shorthand compacting (default is true unless sourceMap is set when it's false)"}}},"minify.html":{"type":"object","description":"Settings specific to HTML minification. Tool tips and completion are provided when editing your settings.","default":{"caseSensitive":false,"collapseBooleanAttributes":true,"collapseInlineTagWhitespace":false,"collapseWhitespace":true,"conservativeCollapse":false,"customAttrAssign":[],"customAttrCollapse":"","customAttrSurround":[],"customEventAttributes":["^on[a-z]{3,}$"],"decodeEntities":false,"html5":true,"ignoreCustomComments":["^!"],"ignoreCustomFragments":["<%[\\s\\S]*?%>","<\\?[\\s\\S]*?\\?>"],"includeAutoGeneratedTags":true,"keepClosingSlash":false,"maxLineLength":false,"minifyCSS":true,"minifyJS":true,"minifyURLs":false,"preserveLineBreaks":false,"preventAttributesEscaping":false,"processConditionalComments":false,"processScripts":[],"quoteCharacter":"\"","removeAttributeQuotes":false,"removeComments":false,"removeEmptyAttributes":false,"removeEmptyElements":false,"removeOptionalTags":false,"removeRedundantAttributes":false,"removeScriptTypeAttributes":false,"removeStyleLinkTypeAttributes":false,"sortAttributes":false,"sortClassName":false,"trimCustomFragments":false,"useShortDoctype":false},"properties":{"caseSensitive":{"type":"boolean","default":false,"description":"Treat attributes in case sensitive manner (useful for custom HTML tags.)"},"collapseBooleanAttributes":{"type":"boolean","default":true,"description":"Omit attribute values from boolean attributes"},"collapseInlineTagWhitespace":{"type":"boolean","default":false,"description":"Don't leave any spaces between display:inline; elements when collapsing. Must be used in conjunction with collapseWhitespace=true."},"collapseWhitespace":{"type":"boolean","default":true,"description":"Collapse white space that contributes to text nodes in a document tree."},"conservativeCollapse":{"type":"boolean","default":false,"description":"Always collapse to 1 space (never remove it entirely). Must be used in conjunction with \"collapseWhitespace\":true"},"customAttrAssign":{"type":"array","default":[],"description":"Arrays of regex'es that allow to support custom attribute assign expressions (e.g. '<div flex?=\"{{mode != cover}}\"></div>')"},"customAttrCollapse":{"type":"string","default":"","description":"Regex that specifies custom attribute to strip newlines from (e.g. \"ng\\-class/\")"},"customAttrSurround":{"type":"array","default":[],"description":"Arrays of regex'es that allow to support custom attribute surround expressions (e.g. <input {{#if value}}checked=\"checked\"{{/if}}>)"},"customEventAttributes":{"type":"array","default":["^on[a-z]{3,}$"],"description":"Arrays of regex'es that allow to support custom event attributes for minifyJS (e.g. ng-click)"},"decodeEntities":{"type":"boolean","default":false,"description":"Use direct Unicode characters whenever possible"},"html5":{"type":"boolean","default":true,"description":"Parse input according to HTML5 specifications"},"ignoreCustomComments":{"type":"array","default":["^!"],"description":"Array of regex'es that allow to ignore certain comments, when matched"},"ignoreCustomFragments":{"type":"array","default":["<%[\\s\\S]*?%>","<\\?[\\s\\S]*?\\?>"],"description":"Array of regex'es that allow to ignore certain fragments, when matched (e.g. <?php ... ?>, {{ ... }}, etc.)"},"includeAutoGeneratedTags":{"type":"boolean","default":true,"description":"Insert tags generated by HTML parser"},"keepClosingSlash":{"type":"boolean","default":false,"description":"Keep the trailing slash on singleton elements"},"maxLineLength":{"type":["boolean","integer"],"default":false,"description":"Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points."},"minifyCSS":{"type":["boolean","object"],"default":true,"description":"Minify CSS in style elements and style attributes (uses clean-css)"},"minifyJS":{"type":["boolean","object"],"default":true,"description":"Minify Javascript in script elements and on* attributes (uses UglifyJS)"},"minifyURLs":{"type":["boolean","object"],"default":false,"description":"Minify URLs in various attributes (uses relateurl) see https://github.com/stevenvachon/relateurl"},"preserveLineBreaks":{"type":"boolean","default":false,"description":"Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break. Must be used in conjunction with \"collapseWhitespace\":true"},"preventAttributesEscaping":{"type":"boolean","default":false,"description":"Prevents the escaping of the values of attributes."},"processConditionalComments":{"type":"boolean","default":false,"description":"Process contents of conditional comments through minifier"},"processScripts":{"type":"array","default":[],"description":"Array of strings corresponding to types of script elements to process through minifier (e.g. text/ng-template, text/x-handlebars-template, etc.)"},"quoteCharacter":{"type":"string","default":"\"","maxLength":1,"description":"Type of quote to use for attribute values (' or \")"},"removeAttributeQuotes":{"type":"boolean","default":false,"description":"Remove quotes around attributes when possible."},"removeComments":{"type":"boolean","default":false,"description":"Strip HTML comments"},"removeEmptyAttributes":{"type":"boolean","default":false,"description":"Remove all attributes with whitespace-only values"},"removeEmptyElements":{"type":"boolean","default":false,"description":"Remove all elements with empty contents"},"removeOptionalTags":{"type":"boolean","default":false,"description":"Remove unrequired tags"},"removeRedundantAttributes":{"type":"boolean","default":false,"description":"Remove attributes when value matches default."},"removeScriptTypeAttributes":{"type":"boolean","default":false,"description":"Remove type=\"text/javascript\" from script tags. Other type attribute values are left intact."},"removeStyleLinkTypeAttributes":{"type":"boolean","default":false,"description":"Remove type=\"text/css\" from style and link tags. Other type attribute values are left intact."},"sortAttributes":{"type":"boolean","default":false,"description":"Sort attributes by frequency"},"sortClassName":{"type":"boolean","default":false,"description":"Sort style classes by frequency"},"trimCustomFragments":{"type":"boolean","default":false,"description":"Trim white space around `ignoreCustomFragments`"},"useShortDoctype":{"type":"boolean","default":false,"description":"Replaces the doctype with the short (HTML5) doctype"}}}}}},"devDependencies":{"vscode":"0.10.6"},"license":"MIT","dependencies":{"uglify-js":">=2.7.0","clean-css":">=3.4.19","html-minifier":">=3.0.2"},"repository":{"type":"git","url":"https://github.com/HookyQR/VSCodeMinify"},"bugs":{"url":"https://github.com/HookyQR/VSCodeMinify/issues"},"uuid":"6d40d0bb-f7f2-4d8b-94a9-ad03aa13fb8f","isBuiltin":false,"id":"HookyQR.minify","extensionFolderPath":"/home/elementaryos/.vscode/extensions/HookyQR.minify-0.3.0"},{"name":"vscode-docker","version":"0.0.25","publisher":"PeterJausovec","displayName":"Docker","description":"Adds syntax highlighting, commands, hover tips, and linting for Dockerfile and docker-compose files.","license":"SEE LICENSE IN LICENSE.md","icon":"images/docker_icon.png","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","galleryBanner":{"color":"#1289B9","theme":"dark"},"categories":["Languages","Linters","Azure"],"keywords":["docker","compose","container","multi-root ready"],"repository":{"url":"https://github.com/microsoft/vscode-docker.git"},"homepage":"https://github.com/Microsoft/vscode-docker/blob/master/README.md","activationEvents":["onLanguage:dockerfile","onLanguage:yaml","onCommand:vscode-docker.image.build","onCommand:vscode-docker.image.inspect","onCommand:vscode-docker.image.remove","onCommand:vscode-docker.image.push","onCommand:vscode-docker.image.tag","onCommand:vscode-docker.container.start","onCommand:vscode-docker.container.start.interactive","onCommand:vscode-docker.container.start.azurecli","onCommand:vscode-docker.container.stop","onCommand:vscode-docker.container.restart","onCommand:vscode-docker.container.show-logs","onCommand:vscode-docker.container.open-shell","onCommand:vscode-docker.compose.up","onCommand:vscode-docker.compose.down","onCommand:vscode-docker.configure","onCommand:vscode-docker.createWebApp","onCommand:vscode-docker.system.prune","onCommand:vscode-docker.dockerHubLogout","onCommand:vscode-docker.browseDockerHub","onCommand:vscode-docker.browseAzurePortal","onCommand:vscode-docker.explorer.refresh","onView:dockerExplorer","onDebugInitialConfigurations"],"main":"/home/elementaryos/.vscode/extensions/PeterJausovec.vscode-docker-0.0.25/out/dockerExtension","contributes":{"menus":{"commandPalette":[{"command":"vscode-docker.browseDockerHub","when":"false"},{"command":"vscode-docker.createWebApp","when":"false"}],"editor/context":[{"when":"editorLangId == dockerfile","command":"vscode-docker.image.build","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.down","group":"docker"}],"explorer/context":[{"when":"resourceFilename =~ /[dD]ocker[fF]ile/","command":"vscode-docker.image.build","group":"docker"},{"when":"resourceFilename =~ /[dD]ocker-[cC]ompose/","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename =~ /[dD]ocker-[cC]ompose/","command":"vscode-docker.compose.down","group":"docker"}],"view/title":[{"command":"vscode-docker.explorer.refresh","when":"view == dockerExplorer","group":"navigation"},{"command":"vscode-docker.system.prune","when":"view == dockerExplorer","group":"navigation"}],"view/item/context":[{"command":"vscode-docker.container.start","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.container.start","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.container.start.interactive","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.container.start.interactive","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.push","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.push","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.remove","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.remove","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.inspect","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.inspect","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.tag","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.tag","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.container.stop","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.stop","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.open-shell","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.open-shell","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.createWebApp","when":"view == dockerExplorer && viewItem == azureImageNode"},{"command":"vscode-docker.createWebApp","when":"view == dockerExplorer && viewItem == dockerHubImageTag"},{"command":"vscode-docker.dockerHubLogout","when":"view == dockerExplorer && viewItem == dockerHubRootNode"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubImageTag"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubRepository"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubNamespace"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureRegistryNode"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureRepositoryNode"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureImageNode"}]},"debuggers":[{"type":"docker","label":"Docker","configurationSnippets":[{"label":"Docker: Attach to Node","description":"Docker: Attach to Node","body":{"type":"node","request":"attach","name":"Docker: Attach to Node","port":9229,"address":"localhost","localRoot":"^\"\\${workspaceFolder}\"","remoteRoot":"/usr/src/app","protocol":"inspector"}}]}],"languages":[{"id":"dockerfile","aliases":["Dockerfile"],"filenamePatterns":["*.dockerfile","Dockerfile"]}],"configuration":{"type":"object","title":"Docker configuration options","properties":{"docker.defaultRegistry":{"type":"string","default":"","description":"Default registry when tagging an image, empty string will target Dockerhub when pushing."},"docker.defaultRegistryPath":{"type":"string","default":"","description":"Path within registry to push to."},"docker.showExplorer":{"type":"boolean","default":true,"description":"Show or hide the Explorer."},"docker.explorerRefreshInterval":{"type":"number","default":1000,"description":"Explorer refresh interval, default is 1000ms."},"docker.imageBuildContextPath":{"type":"string","default":"","description":"Build context PATH to pass to Docker build command."},"docker.truncateLongRegistryPaths":{"type":"boolean","default":false,"description":"Truncate long Image and Container registry paths in the Explorer."},"docker.truncateMaxLength":{"type":"number","default":10,"description":"Maximum number of characters for long registry paths in the Explorer, including elipsis."},"docker.languageserver.diagnostics.deprecatedMaintainer":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for the deprecated MAINTAINER instruction."},"docker.languageserver.diagnostics.emptyContinuationLine":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines."},"docker.languageserver.diagnostics.directiveCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for parser directives that are not written in lowercase."},"docker.languageserver.diagnostics.instructionCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for instructions that are not written in uppercase."},"docker.languageserver.diagnostics.instructionCmdMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions."},"docker.languageserver.diagnostics.instructionEntrypointMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions."},"docker.languageserver.diagnostics.instructionHealthcheckMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions."},"docker.attachShellCommand.linuxContainer":{"type":"string","default":"/bin/sh","description":"Attach command to use for Linux containers"},"docker.attachShellCommand.windowsContainer":{"type":"string","default":"powershell","description":"Attach command to use for Windows containers"},"docker.promptOnSystemPrune":{"type":"boolean","default":true,"description":"Prompt for confirmation when running System Prune command"},"docker.dockerComposeBuild":{"type":"boolean","default":true,"description":"Run docker-compose with the --build argument, defaults to true"},"docker.dockerComposeDetached":{"type":"boolean","default":true,"description":"Run docker-compose with the --d (detached) argument, defaults to true"}}},"commands":[{"command":"vscode-docker.configure","title":"Add Docker files to Workspace","description":"Add Dockerfile, docker-compose.yml files","category":"Docker"},{"command":"vscode-docker.image.build","title":"Build Image","description":"Build a Docker image from a Dockerfile","category":"Docker"},{"command":"vscode-docker.image.inspect","title":"Inspect Image","description":"Inspect the metadata of a Docker image","category":"Docker"},{"command":"vscode-docker.image.remove","title":"Remove Image","description":"Remove a Docker image","category":"Docker"},{"command":"vscode-docker.image.tag","title":"Tag Image","description":"Tag a Docker image","category":"Docker"},{"command":"vscode-docker.container.start","title":"Run","description":"Starts a container from an image","category":"Docker"},{"command":"vscode-docker.container.start.interactive","title":"Run Interactive","description":"Starts a container from an image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.start.azurecli","title":"Azure CLI","description":"Starts a container from the Azure CLI image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.stop","title":"Stop Container","description":"Stop a running container","category":"Docker"},{"command":"vscode-docker.container.restart","title":"Restart Container","description":"Restart one or more containers","category":"Docker"},{"command":"vscode-docker.container.remove","title":"Remove Container","description":"Remove a stopped container","category":"Docker"},{"command":"vscode-docker.container.show-logs","title":"Show Logs","description":"Show the logs of a running container","category":"Docker"},{"command":"vscode-docker.container.open-shell","title":"Attach Shell","description":"Open a terminal with an interactive shell for a running container","category":"Docker"},{"command":"vscode-docker.compose.up","title":"Compose Up","description":"Starts a composition of containers","category":"Docker"},{"command":"vscode-docker.compose.down","title":"Compose Down","description":"Stops a composition of containers","category":"Docker"},{"command":"vscode-docker.image.push","title":"Push","description":"Push an image to a registry","category":"Docker"},{"command":"vscode-docker.system.prune","title":"System Prune","category":"Docker","icon":{"light":"images/light/prune.svg","dark":"images/dark/prune.svg"}},{"command":"vscode-docker.explorer.refresh","title":"Refresh Explorer","category":"Docker","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"vscode-docker.createWebApp","title":"Deploy Image to Azure App Service","category":"Docker"},{"command":"vscode-docker.dockerHubLogout","title":"DockerHub Logout","category":"Docker"},{"command":"vscode-docker.browseDockerHub","title":"Browse in DockerHub","category":"Docker"},{"command":"vscode-docker.browseAzurePortal","title":"Browse in the Azure Portal","category":"Docker"}],"views":{"explorer":[{"id":"dockerExplorer","name":"Docker","when":"config.docker.showExplorer == true"}]}},"engines":{"vscode":"^1.20.0"},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"extensionDependencies":["vscode.docker","vscode.yaml"],"devDependencies":{"vscode":"^1.0.0","typescript":"^2.1.5","@types/node":"^8.0.34","@types/keytar":"^4.0.1"},"dependencies":{"azure-arm-containerregistry":"^1.0.0-preview","azure-arm-resource":"^2.0.0-preview","azure-arm-website":"^1.0.0-preview","dockerfile-language-server-nodejs":"^0.0.13","dockerode":"^2.5.1","moment":"^2.19.3","opn":"^5.1.0","request-promise":"^4.2.2","vscode-extension-telemetry":"^0.0.6","vscode-languageclient":"^3.5.0-next.4"},"uuid":"0479fc1c-3d67-49f9-b087-fb9069afe48f","isBuiltin":false,"id":"PeterJausovec.vscode-docker","extensionFolderPath":"/home/elementaryos/.vscode/extensions/PeterJausovec.vscode-docker-0.0.25"},{"name":"vscode-wakatime","displayName":"WakaTime","description":"Metrics, insights, and time tracking automatically generated from your programming activity.","version":"1.1.26","publisher":"WakaTime","author":{"name":"WakaTime"},"categories":["Other"],"homepage":"https://wakatime.com/","bugs":{"url":"https://github.com/wakatime/vscode-wakatime/issues"},"license":"BSD-3-Clause","icon":"images/wakatime-logo.png","galleryBanner":{"color":"#AEC3D8","theme":"light"},"activationEvents":["*"],"repository":{"type":"git","url":"https://github.com/wakatime/vscode-wakatime.git"},"engines":{"vscode":"^1.17.0"},"main":"/home/elementaryos/.vscode/extensions/WakaTime.vscode-wakatime-1.1.26/out/extension","scripts":{"setup":"mkdir -p ./out/test","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"contributes":{"commands":[{"command":"wakatime.apikey","title":"WakaTime API Key"},{"command":"wakatime.proxy","title":"WakaTime Proxy"},{"command":"wakatime.debug","title":"WakaTime Debug"},{"command":"wakatime.status_bar_icon","title":"WakaTime Status Bar Icon"},{"command":"wakatime.dashboard","title":"WakaTime Dashboard"}]},"dependencies":{"adm-zip":"0.4.7","ini":"1.3.5","request":"2.85.0","rimraf":"2.6.2"},"devDependencies":{"@types/node":"^9.4.7","ini":"1.3.5","request":"2.85.0","rimraf":"2.6.2","typescript":"^2.7.2","vscode":"^1.1.14"},"uuid":"f2fd462f-f1bd-4c62-b54f-59a4e5ffc6a3","isBuiltin":false,"id":"WakaTime.vscode-wakatime","extensionFolderPath":"/home/elementaryos/.vscode/extensions/WakaTime.vscode-wakatime-1.1.26"},{"name":"vscode-faker","displayName":"vscode-faker","description":"Generate fake data for name, address, lorem ipsum, commerce and much more","version":"1.2.1","publisher":"deerawan","engines":{"vscode":"^0.10.1"},"icon":"images/faker.png","bugs":{"url":"https://github.com/deerawan/vscode-faker/issues","email":"deerawan@gmail.com"},"homepage":"https://github.com/deerawan/vscode-faker","repository":{"type":"git","url":"https://github.com/deerawan/vscode-faker"},"categories":["Other"],"activationEvents":["onCommand:faker.address","onCommand:faker.commerce","onCommand:faker.company","onCommand:faker.database","onCommand:faker.date","onCommand:faker.finance","onCommand:faker.hacker","onCommand:faker.image","onCommand:faker.internet","onCommand:faker.lorem","onCommand:faker.name","onCommand:faker.phone","onCommand:faker.random","onCommand:faker.system"],"main":"/home/elementaryos/.vscode/extensions/deerawan.vscode-faker-1.2.1/out/src/extension","contributes":{"commands":[{"command":"faker.address","title":"Faker: Address"},{"command":"faker.commerce","title":"Faker: Commerce"},{"command":"faker.company","title":"Faker: Company"},{"command":"faker.database","title":"Faker: Database"},{"command":"faker.date","title":"Faker: Date"},{"command":"faker.finance","title":"Faker: Finance"},{"command":"faker.hacker","title":"Faker: Hacker"},{"command":"faker.image","title":"Faker: Image"},{"command":"faker.internet","title":"Faker: Internet"},{"command":"faker.lorem","title":"Faker: Lorem"},{"command":"faker.name","title":"Faker: Name"},{"command":"faker.phone","title":"Faker: Phone"},{"command":"faker.random","title":"Faker: Random"},{"command":"faker.system","title":"Faker: System"}],"configuration":{"type":"object","title":"Faker Configuration","properties":{"faker.locale":{"type":"string","default":"en","description":"Set locale for Faker"}}}},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","test":"./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec --ui tdd ./out/test/**/*.test.js","precommit":"lint-staged","format":"prettier --write \"{src,test}/**/*.ts\"","lint":"tslint -c tslint.json 'src/**/*.ts' 'test/**/*.ts' --fix"},"devDependencies":{"chai":"^3.5.0","husky":"^0.14.3","coveralls":"^3.0.0","istanbul":"^0.4.5","lint-staged":"^4.3.0","mocha":"^3.2.0","prettier":"^1.7.4","tslint":"^5.8.0","tslint-config-prettier":"^1.6.0","typescript":"^2.5.3","vscode":"0.10.x"},"dependencies":{"faker":"~4.1.0"},"lint-staged":{"*.{ts,json}":["prettier --write","git add"],"*.ts":["tslint --fix","tslint"]},"uuid":"0808d236-6faf-4f68-9f17-28f51a572ee4","isBuiltin":false,"id":"deerawan.vscode-faker","extensionFolderPath":"/home/elementaryos/.vscode/extensions/deerawan.vscode-faker-1.2.1"},{"name":"gitlens","version":"8.1.1","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","engines":{"vscode":"^1.20.0"},"license":"SEE LICENSE IN LICENSE","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack","href":"https://join.slack.com/t/vscode-dev-community/shared_invite/enQtMjIxOTgxNDE3NzM0LWU5M2ZiZDU1YjBlMzdlZjA2YjBjYzRhYTM5NTgzMTAxMjdiNWU0ZmQzYWI3MWU5N2Q1YjBiYmQ4MzY0NDE1MzY","description":"Join us in the #gitlens channel"}],"categories":["Other"],"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"icon":"images/gitlens-icon.png","preview":false,"homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"main":"/home/elementaryos/.vscode/extensions/eamodio.gitlens-8.1.1/out/extension","contributes":{"configuration":{"type":"object","title":"GitLens configuration","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"description":"Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${ago|14-}","description":"Specifies the format of the gutter blame annotations\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.blame.dateFormat`)\n ${authorAgo} - commit author, relative commit date\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"description":"Specifies where the heatmap indicators will be shown in the gutter blame annotations\n `left` - adds a heatmap indicator on the left edge of the gutter blame annotations\n `right` - adds a heatmap indicator on the right edge of the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"description":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"]},"minItems":1,"maxItems":3,"uniqueItems":true,"description":"Specifies where the associated line highlights will be shown\n `gutter` - adds a gutter glyph\n `line` - adds a full-line highlight background color\n `overview` - adds a decoration to the overview ruler (scroll bar)","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"description":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"description":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"description":"Specifies how the gutter blame annotations will be toggled\n `file` - toggle each file individually\n `window` - toggle the window, i.e. all files at once","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"description":"Specifies the command to be executed when the `authors` code lens is clicked\n `gitlens.toggleFileBlame` - toggles file blame annotations\n `gitlens.diffWithPrevious` - compares the current committed file with the previous commit\n `gitlens.showQuickCommitDetails` - shows a commit details quick pick\n `gitlens.showQuickCommitFileDetails` - shows a commit file details quick pick\n `gitlens.showQuickFileHistory` - shows a file history quick pick\n `gitlens.showQuickRepoHistory` - shows a branch history quick pick","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show an `authors` code lens showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any Git code lens, by default\nUse the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"description":"Specifies the command to be executed when the `recent change` code lens is clicked\n `gitlens.toggleFileBlame` - toggles file blame annotations\n `gitlens.diffWithPrevious` - compares the current committed file with the previous commit\n `gitlens.showQuickCommitDetails` - shows a commit details quick pick\n `gitlens.showQuickCommitFileDetails` - shows a commit file details quick pick\n `gitlens.showQuickFileHistory` - shows a file history quick pick\n `gitlens.showQuickRepoHistory` - shows a branch history quick pick","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show a `recent change` code lens showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document\n `document` - adds code lens at the top of the document\n `containers` - adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)\n `blocks` - adds code lens at the start of block-like symbols (functions, methods, etc) lines","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"scss","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"stylus","scopes":["document"]}],"items":{"type":"object","required":["language","scopes"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language\n `document` - adds code lens at the top of the document\n `containers` - adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)\n `blocks` - adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines\n `custom` - adds code lens at the start of symbols contained in `symbolScopes`"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language\nMust be a member of `SymbolKind`"}}},"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies a set of document symbols where Git code lens will or will not be shown in the document\nPrefix with `!` to not show Git code lens for the symbol\nMust be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"description":"Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide a blame annotation for the current line, by default\nUse the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${authorAgo} • ${message}","description":"Specifies the format of the current line blame annotation\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.annotations.line.trailing.dateFormat`)\n ${authorAgo} - commit author, relative commit date\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"description":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"description":"Specifies how absolute dates will be formatted by default\nSee https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"description":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mm","monsterid","retro","robohash","wavatar"],"description":"Specifies the style of the gravatar default (fallback) images\n `identicon` - a geometric pattern\n `mm` - (mystery-man) a simple, cartoon-style silhouetted outline of a person (does not vary by email hash)\n `monsterid` - a monster with different colors, faces, etc\n `retro` - 8-bit arcade-style pixelated faces\n `robohash` - a robot with different colors, faces, etc\n `wavatar` - faces with differing features and backgrounds","scope":"window"},"gitlens.explorers.avatars":{"type":"boolean","default":true,"description":"Specifies whether to show avatar images instead of commit (or status) icons in the `GitLens` and `GitLens Results` views","scope":"window"},"gitlens.explorers.commitFileFormat":{"type":"string","default":"${filePath}","description":"Specifies the format of a committed file in the `GitLens` and `GitLens Results` views\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path","scope":"window"},"gitlens.explorers.commitFormat":{"type":"string","default":"${message}  •  ${authorAgo}   (${id})","description":"Specifies the format of committed changes in the `GitLens` and `GitLens Results` views\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.statusBar.dateFormat`)\n ${authorAgo} - commit author, relative commit date\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.explorers.stashFileFormat":{"type":"string","default":"${filePath}","description":"Specifies the format of a stashed file in the `GitLens` and `GitLens Results` views\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path","scope":"window"},"gitlens.explorers.stashFormat":{"type":"string","default":"${message}","description":"Specifies the format of stashed changes in the `GitLens` and `GitLens Results` views\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.statusBar.dateFormat`)\n ${authorAgo} - commit author, relative commit date\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.explorers.statusFileFormat":{"type":"string","default":"${working}${filePath}","description":"Specifies the format of the status of a working or committed file in the `GitLens` and `GitLens Results` views\nAvailable tokens\n ${directory} - directory name\n ${file} - file name\n ${filePath} - formatted file name and path\n ${path} - full file path\n ${working} - optional indicator if the file is uncommitted","scope":"window"},"gitlens.gitExplorer.autoRefresh":{"type":"boolean","default":true,"description":"Specifies whether to automatically refresh the `GitLens` explorer when the repository or the file system changes","scope":"window"},"gitlens.gitExplorer.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"description":"Specifies how the `GitLens` explorer will display branches\n `list` - displays branches as a list \n`tree` - displays branches as a tree when branch names contain slashes `/`","scope":"window"},"gitlens.gitExplorer.enabled":{"type":"boolean","default":true,"description":"Specifies whether to show the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.files.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (flatten) unnecessary file nesting in the `GitLens` explorer\nOnly applies when displaying files as a `tree` or `auto`","scope":"window"},"gitlens.gitExplorer.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"description":"Specifies how the `GitLens` explorer will display files\n `auto` - automatically switches between displaying files as a `tree` or `list` based on the `gitlens.gitExplorer.files.threshold` setting and the number of files at each nesting level\n `list` - displays files as a list\n `tree` - displays files as a tree","scope":"window"},"gitlens.gitExplorer.files.threshold":{"type":"number","default":5,"description":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the `GitLens` explorer\nOnly applies when displaying files as `auto`","scope":"window"},"gitlens.gitExplorer.includeWorkingTree":{"type":"boolean","default":true,"description":"Specifies whether to include working tree files inside the `Repository Status` node of the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.showTrackingBranch":{"type":"boolean","default":true,"description":"Specifies whether to show the tracking branch when displaying local branches in the `GitLens` explorer","scope":"window"},"gitlens.gitExplorer.view":{"type":"string","default":"auto","enum":["auto","history","repository"],"description":"Specifies the starting view (mode) of the `GitLens` explorer\n `auto` - shows the last selected view, defaults to `repository`\n `history` - shows the commit history of the active file\n `repository` - shows a repository explorer","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"description":"Specifies how the gutter heatmap annotations will be toggled\n `file` - toggle each file individually\n `window` - toggle the window, i.e. all files at once","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"description":"Specifies whether to provide a changes (diff) hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"description":"Specifies whether to provide a commit details hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"description":"Specifies when to trigger hovers when showing blame annotations\n `annotation` - only shown when hovering over the line annotation\n `line` - shown when hovering anywhere over the line","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"description":"Specifies whether to provide a changes (diff) hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"description":"Specifies whether to provide a commit details hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"description":"Specifies when to trigger hovers for the current line\n `annotation` - only shown when hovering over the line annotation\n `line` - shown when hovering anywhere over the line","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"description":"Specifies whether to enable new experimental features (expect there to be issues)","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"description":"Specifies the keymap to use for GitLens shortcut keys\n `alternate` - adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)\n `chorded` - adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)\n `none` - no shortcut keys will be added","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"silent","enum":["silent","errors","verbose","debug"],"description":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"]},"minItems":1,"maxItems":3,"uniqueItems":true,"description":"Specifies where the highlights of the recently changed lines will be shown\n `gutter` - adds a gutter glyph\n `line` - adds a full-line highlight background color\n `overview` - adds a decoration to the overview ruler (scroll bar)","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"description":"Specifies how the recently changed lines annotations will be toggled\n `file` - toggle each file individually\n `window` - toggle the window, i.e. all files at once","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service\n `Bitbucket`, `BitbucketServer`, `GitHub`, or `GitLab`"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo} - repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${branch} - branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${branch} - branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${id} - commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${line} - formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${branch} - branch\n ${line} - formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo} - repository path\n ${file} - file name\n ${id} - commit id\n ${line} - formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line} - line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start} - starting line\n ${end} - ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"description":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.resultsExplorer.files.compact":{"type":"boolean","default":true,"description":"Specifies whether to compact (flatten) unnecessary file nesting in the `GitLens Results` view\nOnly applies when displaying files as a `tree` or `auto`","scope":"window"},"gitlens.resultsExplorer.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"description":"Specifies how the `GitLens Results` view will display files\n `auto` - automatically switches between displaying files as a `tree` or `list` based on the `gitlens.gitExplorer.files.threshold` setting and the number of files at each nesting level\n `list` - displays files as a list\n `tree` - displays files as a tree","scope":"window"},"gitlens.resultsExplorer.files.threshold":{"type":"number","default":5,"description":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the `GitLens Results` view\nOnly applies when displaying files as `auto`","scope":"window"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"description":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"description":"Specifies the blame alignment in the status bar\n `left` - align to the left\n `right` - align to the right","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"description":"Specifies the command to be executed when the blame status bar item is clicked\n `gitlens.toggleFileBlame` - toggles file blame annotations\n `gitlens.diffWithPrevious` - compares the current line commit with the previous\n `gitlens.diffWithWorking` - compares the current line commit with the working tree\n `gitlens.toggleCodeLens` - toggles Git code lens\n `gitlens.showQuickCommitDetails` - shows a commit details quick pick\n `gitlens.showQuickCommitFileDetails` - shows a commit file details quick pick\n `gitlens.showQuickFileHistory` - shows a file history quick pick\n `gitlens.showQuickRepoHistory` - shows a branch history quick pick","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"description":"Specifies the date format of absolute dates shown in the blame information on the status bar. See https://momentjs.com/docs/#/displaying/format/ for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"description":"Specifies whether to provide blame information on the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${authorAgo}","description":"Specifies the format of the status bar blame information\nAvailable tokens\n ${id} - commit id\n ${author} - commit author\n ${message} - commit message\n ${ago} - relative commit date (e.g. 1 day ago)\n ${date} - formatted commit date (format specified by `gitlens.statusBar.dateFormat`)\n ${authorAgo} - commit author, relative commit date\nSee https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting for advanced formatting","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"description":"Specifies whether to reduce the status bar \"flickering\" when changing lines by not first clearing the previous blame information","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","description":"Specifies the string to be shown in place of both the `recent change` and `authors` code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","description":"Specifies the string to be shown in place of the `recent change` code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","description":"Specifies the string to be shown in place of the `authors` code lens when there are unsaved changes","scope":"window"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"description":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"description":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"description":"Specifies whether git output will be cached -- changing the default is not recommended","scope":"window"},"gitlens.advanced.git":{"type":"string","default":null,"description":"Specifies the path to the git executable to use. Use as a last resort as GitLens will use the built-in `git.path` setting first","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"description":"Specifies whether file histories will follow renames -- will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"description":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.menus":{"type":"object","default":{"editorContext":{"blame":true,"copy":true,"details":true,"fileDiff":true,"history":true,"lineDiff":true,"remote":true},"editorTitle":{"blame":true,"fileDiff":false,"history":false,"remote":false,"status":false},"editorTitleContext":{"blame":false,"fileDiff":false,"history":false,"remote":false},"explorerContext":{"fileDiff":true,"history":true,"remote":true}},"properties":{"editorContext":{"type":"object","default":{"blame":true,"copy":true,"details":true,"fileDiff":true,"history":true,"lineDiff":true,"remote":true},"properties":{"blame":{"type":"boolean","default":true},"copy":{"type":"boolean","default":true},"details":{"type":"boolean","default":true},"fileDiff":{"type":"boolean","default":true},"history":{"type":"boolean","default":true},"lineDiff":{"type":"boolean","default":true},"remote":{"type":"boolean","default":true}}},"editorTitle":{"type":"object","default":{"blame":true,"fileDiff":true,"history":true,"remote":true,"status":true},"properties":{"blame":{"type":"boolean","default":true},"fileDiff":{"type":"boolean","default":true},"history":{"type":"boolean","default":true},"remote":{"type":"boolean","default":true},"status":{"type":"boolean","default":true}}},"editorTitleContext":{"type":"object","default":{"blame":true,"fileDiff":true,"history":true,"remote":true},"properties":{"blame":{"type":"boolean","default":true},"fileDiff":{"type":"boolean","default":true},"history":{"type":"boolean","default":true},"remote":{"type":"boolean","default":true}}},"explorerContext":{"type":"object","default":{"fileDiff":true,"history":true,"remote":true},"properties":{"fileDiff":{"type":"boolean","default":true},"history":{"type":"boolean","default":true},"remote":{"type":"boolean","default":true}}}},"description":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressResultsExplorerNotice":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressResultsExplorerNotice":{"type":"boolean","default":false}},"description":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"description":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"description":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `telemetry.enableTelemetry` setting","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the trailing blame annotation","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the trailing blame annotation","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens"},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffHeadWithBranch","title":"Compare Index (HEAD) with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWorkingWithBranch","title":"Compare Working Tree with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWith","title":"Compare File Revisions","category":"GitLens"},{"command":"gitlens.diffWithBranch","title":"Compare File with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Compare File with Next Revision","category":"GitLens"},{"command":"gitlens.diffWithPrevious","title":"Compare File with Previous Revision","category":"GitLens"},{"command":"gitlens.diffLineWithPrevious","title":"Compare Line Revision with Previous","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Compare File with Revision...","category":"GitLens"},{"command":"gitlens.diffWithWorking","title":"Compare File with Working Revision","category":"GitLens"},{"command":"gitlens.diffLineWithWorking","title":"Compare Line Revision with Working File","category":"GitLens"},{"command":"gitlens.showFileBlame","title":"Show File Blame Annotations","category":"GitLens"},{"command":"gitlens.showLineBlame","title":"Show Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon.svg","light":"images/light/git-icon.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon-orange.svg","light":"images/light/git-icon-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/git-icon-progress.svg","light":"images/light/git-icon-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens"},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/git-icon.svg","light":"images/light/git-icon.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit File Details","category":"GitLens"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches in Remote","category":"GitLens"},{"command":"gitlens.openBranchInRemote","title":"Open Branch in Remote","category":"GitLens"},{"command":"gitlens.openCommitInRemote","title":"Open Commit in Remote","category":"GitLens"},{"command":"gitlens.openFileInRemote","title":"Open File in Remote","category":"GitLens"},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository in Remote","category":"GitLens"},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens"},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens"},{"command":"gitlens.stashSave","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.explorers.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.explorers.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.explorers.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.explorers.openFileRevision","title":"Open Revision","category":"GitLens"},{"command":"gitlens.explorers.openFileRevisionInRemote","title":"Open Revision in Remote","category":"GitLens"},{"command":"gitlens.explorers.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.explorers.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.explorers.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.compareWithHead","title":"Compare with Index (HEAD)","category":"GitLens"},{"command":"gitlens.explorers.compareWithRemote","title":"Compare with Remote","category":"GitLens"},{"command":"gitlens.explorers.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.explorers.compareWithWorking","title":"Compare with Working Tree","category":"GitLens"},{"command":"gitlens.explorers.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.explorers.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.explorers.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.explorers.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.explorers.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.gitExplorer.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.gitExplorer.refreshNode","title":"Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.gitExplorer.switchToHistoryView","title":"Switch to History View","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.gitExplorer.switchToRepositoryView","title":"Switch to Repository View","category":"GitLens","icon":{"dark":"images/dark/icon-repo.svg","light":"images/light/icon-repo.svg"}},{"command":"gitlens.resultsExplorer.clearResultsNode","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.resultsExplorer.close","title":"Close","category":"GitLens","icon":{"dark":"images/dark/icon-close.svg","light":"images/light/icon-close.svg"}},{"command":"gitlens.resultsExplorer.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.resultsExplorer.refreshNode","title":"Refresh","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.resultsExplorer.swapComparision","title":"Swap Comparision","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWithBranch","when":"gitlens:enabled"},{"command":"gitlens.diffWith","when":"false"},{"command":"gitlens.diffWithBranch","when":"gitlens:activeIsTracked"},{"command":"gitlens.diffWithNext","when":"gitlens:activeIsTracked"},{"command":"gitlens.diffWithPrevious","when":"gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeIsBlameable"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeIsTracked"},{"command":"gitlens.diffWithWorking","when":"gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeIsBlameable"},{"command":"gitlens.externalDiff","when":"gitlens:enabled"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.showFileBlame","when":"gitlens:activeIsBlameable"},{"command":"gitlens.showLineBlame","when":"gitlens:activeIsBlameable"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeIsBlameable"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeIsBlameable && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeIsBlameable"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeIsBlameable"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeIsBlameable"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeIsBlameable"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeIsTracked"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeIsBlameable"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeIsBlameable"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:activeHasRemote"},{"command":"gitlens.openBranchInRemote","when":"gitlens:activeHasRemote"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeIsBlameable && gitlens:activeHasRemote"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeIsTracked && gitlens:activeHasRemote"},{"command":"gitlens.openFileRevision","when":"gitlens:activeIsTracked"},{"command":"gitlens.openRepoInRemote","when":"gitlens:activeHasRemote"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeIsRevision"},{"command":"gitlens.stashApply","when":"gitlens:enabled"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.explorers.openChanges","when":"false"},{"command":"gitlens.explorers.openDirectoryDiff","when":"false"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.explorers.openChangesWithWorking","when":"false"},{"command":"gitlens.explorers.openFile","when":"false"},{"command":"gitlens.explorers.openFileRevision","when":"false"},{"command":"gitlens.explorers.openFileRevisionInRemote","when":"false"},{"command":"gitlens.explorers.openChangedFiles","when":"false"},{"command":"gitlens.explorers.openChangedFileChanges","when":"false"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.explorers.openChangedFileRevisions","when":"false"},{"command":"gitlens.explorers.applyChanges","when":"false"},{"command":"gitlens.explorers.compareAncestryWithWorking","when":"false"},{"command":"gitlens.explorers.compareWithHead","when":"false"},{"command":"gitlens.explorers.compareWithRemote","when":"false"},{"command":"gitlens.explorers.compareWithSelected","when":"false"},{"command":"gitlens.explorers.compareWithWorking","when":"false"},{"command":"gitlens.explorers.selectForCompare","when":"false"},{"command":"gitlens.explorers.terminalCheckoutBranch","when":"false"},{"command":"gitlens.explorers.terminalCreateBranch","when":"false"},{"command":"gitlens.explorers.terminalDeleteBranch","when":"false"},{"command":"gitlens.explorers.terminalMergeBranch","when":"false"},{"command":"gitlens.explorers.terminalRebaseBranch","when":"false"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.explorers.terminalCherryPickCommit","when":"false"},{"command":"gitlens.explorers.terminalPushCommit","when":"false"},{"command":"gitlens.explorers.terminalRebaseCommit","when":"false"},{"command":"gitlens.explorers.terminalResetCommit","when":"false"},{"command":"gitlens.explorers.terminalRevertCommit","when":"false"},{"command":"gitlens.explorers.terminalRemoveRemote","when":"false"},{"command":"gitlens.explorers.terminalCreateTag","when":"false"},{"command":"gitlens.explorers.terminalDeleteTag","when":"false"},{"command":"gitlens.gitExplorer.refresh","when":"false"},{"command":"gitlens.gitExplorer.refreshNode","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","when":"false"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","when":"false"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","when":"false"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","when":"false"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","when":"false"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","when":"false"},{"command":"gitlens.gitExplorer.switchToHistoryView","when":"gitlens:enabled && gitlens:gitExplorer:view == repository"},{"command":"gitlens.gitExplorer.switchToRepositoryView","when":"gitlens:enabled &&  gitlens:gitExplorer:view == history"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"false"},{"command":"gitlens.resultsExplorer.close","when":"false"},{"command":"gitlens.resultsExplorer.refresh","when":"false"},{"command":"gitlens.resultsExplorer.refreshNode","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","when":"false"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","when":"false"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","when":"false"},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","when":"false"},{"command":"gitlens.resultsExplorer.swapComparision","when":"false"}],"editor/context":[{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeHasRemote && config.gitlens.advanced.menus.editorContext.remote","group":"navigation@100"},{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.lineDiff","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.lineDiff","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.details","group":"1_gitlens@3"},{"command":"gitlens.diffWithPrevious","when":"editorTextFocus && gitlens:activeIsTracked && config.gitlens.advanced.menus.editorContext.fileDiff","group":"1_gitlens_1@1"},{"command":"gitlens.diffWithWorking","when":"editorTextFocus && gitlens:activeIsTracked && config.gitlens.advanced.menus.editorContext.fileDiff","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeIsTracked && config.gitlens.advanced.menus.editorContext.history","group":"3_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.blame","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.copy","group":"9_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeIsBlameable && config.gitlens.advanced.menus.editorContext.copy","group":"9_gitlens@2"}],"editor/title":[{"command":"gitlens.openWorkingFile","when":"gitlens:activeIsRevision","group":"navigation@1"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileRecentChanges","when":"gitlens:activeIsBlameable && !gitlens:annotationStatus && config.gitlens.advanced.menus.editorTitle.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeIsBlameable && gitlens:annotationStatus == computing && config.gitlens.advanced.menus.editorTitle.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeIsBlameable && gitlens:annotationStatus == computed && config.gitlens.advanced.menus.editorTitle.blame","group":"navigation@100"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:activeHasRemote && config.gitlens.advanced.menus.editorTitle.remote","group":"2_gitlens"},{"command":"gitlens.openRepoInRemote","when":"gitlens:enabled && gitlens:activeHasRemote && config.gitlens.advanced.menus.editorTitle.remote","group":"2_gitlens"},{"command":"gitlens.diffWithPrevious","when":"editorTextFocus && gitlens:activeIsTracked && config.gitlens.advanced.menus.editorTitle.fileDiff","group":"2_gitlens_1"},{"command":"gitlens.diffWithWorking","when":"editorTextFocus && gitlens:activeIsTracked && config.gitlens.advanced.menus.editorTitle.fileDiff","group":"2_gitlens_1"},{"command":"gitlens.showQuickFileHistory","when":"editorFocus && gitlens:activeIsTracked && config.gitlens.advanced.menus.editorTitle.history","group":"2_gitlens_2"},{"command":"gitlens.showQuickRepoHistory","when":"!editorFocus && gitlens:enabled && config.gitlens.advanced.menus.editorTitle.history","group":"2_gitlens_2"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled && config.gitlens.advanced.menus.editorTitle.status","group":"2_gitlens_2"}],"editor/title/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:activeHasRemote && config.gitlens.advanced.menus.editorTitleContext.remote","group":"1_gitlens"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.advanced.menus.editorTitleContext.fileDiff","group":"1_gitlens_1@1"},{"command":"gitlens.diffWithWorking","when":"gitlens:enabled && config.gitlens.advanced.menus.editorTitleContext.fileDiff","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.advanced.menus.editorTitleContext.history","group":"1_gitlens_2@1"},{"command":"gitlens.toggleFileBlame","when":"gitlens:enabled && config.gitlens.advanced.menus.editorTitleContext.blame","group":"1_gitlens_2@2"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.advanced.menus.explorerContext.remote","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.advanced.menus.explorerContext.fileDiff","group":"1_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.advanced.menus.explorerContext.fileDiff","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.advanced.menus.explorerContext.history","group":"1_gitlens_1@1"}],"scm/resourceGroup/context":[{"command":"gitlens.openChangedFiles","when":"gitlens:enabled","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled","group":"2_gitlens@2"},{"command":"gitlens.externalDiff","when":"gitlens:enabled","group":"2_gitlens@3"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled","group":"2_gitlens@4"},{"command":"gitlens.stashSave","when":"gitlens:enabled","group":"3_gitlens@1"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.diffWithBranch","when":"gitlens:enabled","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled","group":"1_gitlens_1@1"},{"command":"gitlens.stashSave","when":"gitlens:enabled","group":"2_gitlens@1"}],"view/title":[{"command":"gitlens.showCommitSearch","when":"view == gitlens.gitExplorer","group":"navigation@1"},{"command":"gitlens.gitExplorer.switchToHistoryView","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == repository","group":"navigation@2"},{"command":"gitlens.gitExplorer.switchToRepositoryView","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == history","group":"navigation@3"},{"command":"gitlens.gitExplorer.refresh","when":"view == gitlens.gitExplorer","group":"navigation@4"},{"command":"gitlens.gitExplorer.setFilesLayoutToAuto","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setFilesLayoutToList","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setFilesLayoutToTree","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == repository","group":"1_gitlens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOn","when":"view == gitlens.gitExplorer && config.gitlens.gitExplorer.autoRefresh && !gitlens:gitExplorer:autoRefresh","group":"2_gitlens"},{"command":"gitlens.gitExplorer.setAutoRefreshToOff","when":"view == gitlens.gitExplorer && config.gitlens.gitExplorer.autoRefresh && gitlens:gitExplorer:autoRefresh","group":"2_gitlens"},{"command":"gitlens.gitExplorer.setRenameFollowingOn","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == history && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"2_gitlens_1"},{"command":"gitlens.gitExplorer.setRenameFollowingOff","when":"view == gitlens.gitExplorer && gitlens:gitExplorer:view == history && config.gitlens.advanced.fileHistoryFollowsRenames","group":"2_gitlens_1"},{"command":"gitlens.showCommitSearch","when":"view == gitlens.resultsExplorer","group":"navigation@1"},{"command":"gitlens.resultsExplorer.setKeepResultsToOn","when":"view == gitlens.resultsExplorer && !gitlens:resultsExplorer:keepResults","group":"navigation@2"},{"command":"gitlens.resultsExplorer.setKeepResultsToOff","when":"view == gitlens.resultsExplorer && gitlens:resultsExplorer:keepResults","group":"navigation@2"},{"command":"gitlens.resultsExplorer.refresh","when":"view == gitlens.resultsExplorer","group":"navigation@3"},{"command":"gitlens.resultsExplorer.close","when":"view == gitlens.resultsExplorer","group":"navigation@9"},{"command":"gitlens.resultsExplorer.setFilesLayoutToAuto","when":"view == gitlens.resultsExplorer","group":"1_gitlens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToList","when":"view == gitlens.resultsExplorer","group":"1_gitlens"},{"command":"gitlens.resultsExplorer.setFilesLayoutToTree","when":"view == gitlens.resultsExplorer","group":"1_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem == gitlens:branches:remotes","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:(branch\\b(.*?:tracking|:remote))/","group":"1_gitlens@1"},{"command":"gitlens.explorers.compareWithRemote","when":"viewItem =~ /gitlens:(branch\\b.*?:tracking)/","group":"7_gitlens@1"},{"command":"gitlens.explorers.compareWithHead","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@2"},{"command":"gitlens.explorers.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.explorers.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b/","group":"7_gitlens@4"},{"command":"gitlens.explorers.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:explorers:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.explorers.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.explorers.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_diff@1"},{"command":"gitlens.explorers.terminalCheckoutBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalRebaseBranchToRemote","when":"viewItem =~ /gitlens:(branch:current:tracking|status:upstream)\\b/","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalMergeBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@2"},{"command":"gitlens.explorers.terminalRebaseBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@3"},{"command":"gitlens.explorers.terminalSquashBranchIntoCommit","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@4"},{"command":"gitlens.explorers.terminalCreateBranch","when":"viewItem =~ /gitlens:(branch|commit|status:upstream|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.explorers.terminalDeleteBranch","when":"viewItem =~ /gitlens:(branch\\b(?!:current))/","group":"8_gitlens@6"},{"command":"gitlens.explorers.terminalCreateTag","when":"viewItem =~ /gitlens:(branch|commit|status:upstream)\\b/","group":"8_gitlens@7"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.explorers.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.explorers.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.explorers.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.explorers.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"4_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"4_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.explorers.terminalCherryPickCommit","when":"viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalPushCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalRevertCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@1"},{"command":"gitlens.explorers.terminalRebaseCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@2"},{"command":"gitlens.explorers.terminalResetCommit","when":"viewItem == gitlens:commit:current","group":"8_gitlens@3"},{"command":"gitlens.explorers.openFile","when":"viewItem =~ /gitlens:file\\b/","group":"inline"},{"command":"gitlens.explorers.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.explorers.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.explorers.openFile","when":"viewItem =~ /gitlens:(file|history-file|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.explorers.openFileRevision","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.explorers.openFileRevisionInRemote","when":"viewItem == gitlens:file:commit && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history-file|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/ && gitlens:gitExplorer:view == repository","group":"8_gitlens@1"},{"command":"gitlens.showQuickCommitFileDetails","when":"viewItem =~ /gitlens:file\\b(?!:stash)/","group":"8_gitlens@2"},{"command":"gitlens.explorers.applyChanges","when":"viewItem == gitlens:file:commit","group":"5_gitlens@1"},{"command":"gitlens.explorers.applyChanges","when":"viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:status && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem == gitlens:remote","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:remote","group":"1_gitlens@2"},{"command":"gitlens.explorers.terminalRemoveRemote","when":"viewItem == gitlens:remote","group":"8_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem == gitlens:repository && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.resultsExplorer.swapComparision","when":"viewItem == gitlens:results:comparison","group":"inline@1"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"viewItem =~ /gitlens:results\\b(?!:(commits|files))/","group":"inline@2"},{"command":"gitlens.resultsExplorer.clearResultsNode","when":"viewItem =~ /gitlens:results\\b(?!:(commits|files))/","group":"1_gitlens@1"},{"command":"gitlens.resultsExplorer.swapComparision","when":"viewItem == gitlens:results:comparison","group":"1_gitlens@2"},{"command":"gitlens.explorers.openDirectoryDiff","when":"viewItem == gitlens:results:comparison","group":"7_gitlens@1"},{"command":"gitlens.stashSave","when":"viewItem == gitlens:stashes","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.explorers.terminalDeleteTag","when":"viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.gitExplorer.refreshNode","when":"view =~ /gitlens\\.(git|results)Explorer/ && viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsBlameable"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"gitlens:keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffWithWorking","key":"shift+alt+w","when":"gitlens:keymap == alternate && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsBlameable"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"gitlens:keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsTracked"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+w","mac":"cmd+alt+g shift+w","when":"gitlens:keymap == chorded && editorTextFocus && gitlens:activeIsTracked"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","when":"gitlens:keymap == chorded && gitlens:enabled"}],"views":{"explorer":[{"id":"gitlens.gitExplorer","name":"GitLens","when":"gitlens:enabled && gitlens:gitExplorer"},{"id":"gitlens.resultsExplorer","name":"GitLens Results","when":"gitlens:enabled && gitlens:resultsExplorer"}]}},"activationEvents":["*"],"scripts":{"build":"npm run lint && tsc -m commonjs -p ./ && npm run build-ui -- --env.quick","build-ui":"webpack --context ./src/ui --config ./src/ui/webpack.config.js","bundle":"npm run lint && webpack --env.production --context ./src/ui --config ./src/ui/webpack.config.js && webpack --env.production","clean":"git clean -Xdf","lint":"tslint --project tslint.json","pack":"vsce package","pub":"vsce publish","rebuild":"npm run reset && npm run lint && tsc -m commonjs -p ./ && npm run build-ui","reset":"npm run clean && npm install --no-save","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install && pushd \"./src/ui\" && npm install --no-save && popd","prepush":"npm run build","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"copy-paste":"1.3.0","date-fns":"1.29.0","iconv-lite":"0.4.19","lodash.debounce":"4.0.8","lodash.once":"4.1.1","tmp":"0.0.33","tslib":"1.9.0"},"devDependencies":{"@types/copy-paste":"1.1.30","@types/node":"9.4.7","@types/tmp":"0.0.33","husky":"0.14.3","ts-loader":"4.0.1","tslint":"5.9.1","typescript":"2.7.2","uglify-es":"3.3.9","uglifyjs-webpack-plugin":"1.2.3","vscode":"1.1.13","webpack":"4.1.1","webpack-cli":"2.0.11","webpack-node-externals":"1.6.0"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"id":"eamodio.gitlens","extensionFolderPath":"/home/elementaryos/.vscode/extensions/eamodio.gitlens-8.1.1"},{"name":"vscode-todo-parser","displayName":"TODO Parser","description":"Parse TODOs in your working files.","version":"1.9.1","publisher":"minhthai","engines":{"vscode":"^1.2.0"},"categories":["Other"],"activationEvents":["*"],"main":"/home/elementaryos/.vscode/extensions/minhthai.vscode-todo-parser-1.9.1/out/src/extension","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^1.6.2","vscode":"^0.11.x"},"contributes":{"commands":[{"command":"extension.parseAllFiles","title":"Parse TODOs (all files)"},{"command":"extension.parseCurrentFile","title":"Parse TODOs (current document)"},{"command":"extension.cancelParseAllFiles","title":"Cancel TODOs Parser"}],"configuration":{"type":"object","title":"TodoParser configuration","properties":{"TodoParser":{"type":"object","description":"Configurations for the extension.","properties":{"markers":{"type":"array","description":"An array of words that signal the start of TODOs, or tuples containig the words and their priorities.","items":{"type":["string","array"],"description":"Word that signals the start of a TODO comment, or a tuple of the word and comment priority.","items":[{"type":"string","description":"Word that signals the start of a TODO comment."},{"enum":["Error",0,"Warning",1,"Information",2,"Hint",3],"description":"The priority level of the TODO comment. Determines how the TODO item is rendered in the Problems panel"}]}},"showInProblems":{"type":"boolean","description":"If true, show TODO comments in Problems panel."}}}}}},"repository":{"type":"git","url":"https://github.com/kantlove/vscode-todo-parser.git"},"icon":"images/icon.png","galleryBanner":{"color":"#ecf0f1","theme":"light"},"dependencies":{"chance":"^1.0.4","fs-extra":"^0.30.0","typescript":"^1.8.10","typescript-collections":"^1.1.2"},"license":"SEE LICENSE IN LICENSE","uuid":"276fd2ee-2d7f-4a4c-b2ea-1780b1f8e59b","isBuiltin":false,"id":"minhthai.vscode-todo-parser","extensionFolderPath":"/home/elementaryos/.vscode/extensions/minhthai.vscode-todo-parser-1.9.1"},{"name":"indent-rainbow","description":"Makes indentation easier to read","version":"0.7.2","publisher":"oderwat","author":{"name":"Hans Raaf"},"icon":"assets/icon.png","license":"MIT","engines":{"vscode":"0.10.x"},"repository":{"url":"https://github.com/oderwat/vscode-indent-rainbow.git","type":"git"},"bugs":{"url":"https://github.com/oderwat/vscode-indent-rainbow/issues"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"Indent-Rainbow configuration","properties":{"indentRainbow.includedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be activated. When empty will use for all languages."},"indentRainbow.excludedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be deactivated. When left empty will ignore."},"indentRainbow.ignoreErrorLanguages":{"type":"array","default":["plaintext"],"description":"For which languages indent-rainbow should skip indent error detection (use '*' to deavtivate errors for all languages)."},"indentRainbow.updateDelay":{"type":"integer","default":100,"description":"The delay in ms until the editor gets updated."},"indentRainbow.indentSetter":{"type":"object","default":{},"description":"Automatically change indent settings for languages (see README.md for details)."},"indentRainbow.errorColor":{"type":"string","default":"rgba(128,32,32,0.6)","description":"Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb)."},"indentRainbow.ignoreLinePatterns":{"type":"array","default":["/.*\\*.*/g"],"description":"Skip error highlighting for RegEx patterns. Defaults to ignoring JSDoc comments with a single extra space."},"indentRainbow.colors":{"type":"array","default":["rgba(64,64,16,0.3)","rgba(32,64,32,0.3)","rgba(64,32,64,0.3)","rgba(16,48,48,0.3)"],"description":"An array with color (hex, rgba, rgb) strings which are used as colors, can be any length."}}}},"main":"/home/elementaryos/.vscode/extensions/oderwat.indent-rainbow-0.7.2/out/extension","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./"},"devDependencies":{"vscode":"0.10.x","typescript":"^1.6.2"},"dependencies":{"vsce":"^1.31.0"},"uuid":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b","isBuiltin":false,"id":"oderwat.indent-rainbow","extensionFolderPath":"/home/elementaryos/.vscode/extensions/oderwat.indent-rainbow-0.7.2"},{"name":"change-case","description":"Quickly change the case (camelCase, CONSTANT_CASE, snake_case, etc) of the current selection or current word","icon":"images/change-case-icon.png","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"repository":{"type":"git","url":"https://github.com/wmaurer/vscode-change-case.git"},"bugs":{"url":"https://github.com/wmaurer/vscode-change-case/issues"},"license":"MIT","version":"1.0.0","publisher":"wmaurer","engines":{"vscode":"^1.6.0"},"categories":["Other"],"activationEvents":["onCommand:extension.changeCase.commands","onCommand:extension.changeCase.camel","onCommand:extension.changeCase.constant","onCommand:extension.changeCase.dot","onCommand:extension.changeCase.kebab","onCommand:extension.changeCase.lower","onCommand:extension.changeCase.lowerFirst","onCommand:extension.changeCase.no","onCommand:extension.changeCase.param","onCommand:extension.changeCase.pascal","onCommand:extension.changeCase.path","onCommand:extension.changeCase.sentence","onCommand:extension.changeCase.snake","onCommand:extension.changeCase.swap","onCommand:extension.changeCase.title","onCommand:extension.changeCase.upper","onCommand:extension.changeCase.upperFirst"],"main":"/home/elementaryos/.vscode/extensions/wmaurer.change-case-1.0.0/out/src/extension","contributes":{"commands":[{"command":"extension.changeCase.commands","title":"Change Case Commands"},{"command":"extension.changeCase.camel","title":"Change Case camel"},{"command":"extension.changeCase.constant","title":"Change Case constant"},{"command":"extension.changeCase.dot","title":"Change Case dot"},{"command":"extension.changeCase.kebab","title":"Change Case kebab"},{"command":"extension.changeCase.lower","title":"Change Case lower"},{"command":"extension.changeCase.lowerFirst","title":"Change Case lowerFirst"},{"command":"extension.changeCase.no","title":"Change Case no"},{"command":"extension.changeCase.param","title":"Change Case param"},{"command":"extension.changeCase.pascal","title":"Change Case pascal"},{"command":"extension.changeCase.path","title":"Change Case path"},{"command":"extension.changeCase.sentence","title":"Change Case sentence"},{"command":"extension.changeCase.snake","title":"Change Case snake"},{"command":"extension.changeCase.swap","title":"Change Case swap"},{"command":"extension.changeCase.title","title":"Change Case title"},{"command":"extension.changeCase.upper","title":"Change Case upper"},{"command":"extension.changeCase.upperFirst","title":"Change Case upperFirst"}]},"configuration":{"type":"object","title":"changeCase configuration","properties":{"changeCase.includeDotInCurrentWord":{"type":"boolean","default":"false","description":"When selecting current word, allow dots in current word (false by default)"}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.46","mocha":"^2.3.3","typescript":"^2.0.6","vscode":"^1.0.3"},"dependencies":{"change-case":"^3.0.0","lodash.range":"^3.1.1","lodash.uniq":"^4.1.0"},"uuid":"2aa040bf-c73a-455d-8946-5c6cc83b8019","isBuiltin":false,"id":"wmaurer.change-case","extensionFolderPath":"/home/elementaryos/.vscode/extensions/wmaurer.change-case-1.0.0"}]}